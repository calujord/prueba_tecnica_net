// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaTecnicaNet.Context;

#nullable disable

namespace PruebaTecnicaNet.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PruebaTecnicaNet.Entities.FeeDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("HourlyImbalanceFee")
                        .HasColumnType("float");

                    b.Property<double?>("ImbalanceFee")
                        .HasColumnType("float");

                    b.Property<double?>("PeakLoadFee")
                        .HasColumnType("float");

                    b.Property<string>("Timestamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("VolumeFee")
                        .HasColumnType("float");

                    b.Property<double?>("WeeklyFee")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Fee");
                });
#pragma warning restore 612, 618
        }
    }
}
